import { Telegraf } from 'telegraf'
import 'dotenv/config'

export const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN!)

const domain = process.env.BASE_URL!

bot.telegram.setMyCommands([
    { command: 'start', description: '–ù–∞—á–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é' },
    { command: 'help', description: '–ü–æ–º–æ—â—å' },
]).then(() => {
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
}).catch((err) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥:', err)
})

bot.start(async (ctx) => {
    const loginUrl = `${domain}/api/auth/telegram/redirect-handler`

    await ctx.reply('üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è:', {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: 'üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è',
                        login_url: {
                            url: loginUrl,
                            request_write_access: true,
                        },
                    },
                ],
            ],
        },
    })
})

bot.help(async (ctx) => {
    await ctx.reply('üÜò –ü–æ–º–æ—â—å:\n\n- –ù–∞–∂–º–∏ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å\n- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Telegram Login URL\n- –ï—Å–ª–∏ —Ç—ã –≤–∏–¥–∏—à—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ')
})